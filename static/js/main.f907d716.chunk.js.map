{"version":3,"sources":["mock/data.js","components/Header/Header.tsx","layouts/Template.tsx","components/Workout/Sets.tsx","components/Workout/Workout.tsx","actions/workout.ts","actions/setsForm.ts","components/Workout/WorkoutList.tsx","components/Workout/WorkoutForm.tsx","components/Workout/SetsForm.tsx","containers/WorkoutContainer.tsx","App.tsx","reducers/workoutReducer.ts","reducers/setsFormReducer.ts","reducers/index.ts","store/index.ts","serviceWorker.ts","index.tsx"],"names":["data","id","parts","name","type","label","checked","sets","weight","reps","createdAt","Header","react_default","a","createElement","Fragment","index_es","variant","color","style","flexGrow","icons_index_es","Component","Container","styled","div","_templateObject","Template","_ref","children","components_Header_Header","tableCellStyles","padding","textAlign","Sets","handleOpenSetsAddForm","handleOpenSetsUpdateForm","handleDeleteSets","tableLayout","align","map","row","index","key","component","scope","value","typeIndex","concat","margin","lineHeight","toUpperCase","onClick","fontSize","confirm","length","colSpan","fullWidth","Workout","state","anchorEl","handleClick","event","_this","setState","currentTarget","handleClose","handleEdit","props","handleOpenUpdateForm","handleDelete","deleteWorkout","openSetsAddForm","selectedIndex","openSetsUpdateForm","setsIndex","deleteSets","this","open","WorkoutHeader","WorkoutName","marginRight","onClose","TransitionComponent","Fade","disabled","Workout_Sets","Workout_templateObject","strong","_templateObject2","connect","dispatch","workout","payload","workoutData","workoutId","List","ul","WorkoutList_templateObject","ListItem","li","WorkoutList_templateObject2","WorkoutList","list","components_Workout_Workout","initialState","submitType","formData","WorkoutForm","handleChangeText","Object","objectSpread","defineProperty","target","handleCheckbox","newType","toConsumableArray","handleSubmit","_this$state","isValid","Math","random","Date","getTime","addWorkout","updateWorkout","_this$state$formData","checkName","checkType","some","_this2","_this$state2","_this$state2$formData","keepMounted","onChange","control","labelPlacement","marginLeft","justifyContent","SetsFormTitle","count","SetsForm","closeSetsForm","handleChangeValue","_event$target","changeSetsValue","_this$props","selectedSetsIndex","updateSets","addSets","_this$props2","isOpen","SetsForm_SetsFormTitle","_state$setsFormReduce","setsFormReducer","setsData","WorkoutContainer","handleOpenAddForm","handleCloseWorkoutForm","workoutList","layouts_Template","WorkoutContainerWrapper","Workout_WorkoutList","AddButton","size","aria-label","Workout_WorkoutForm","Workout_SetsForm","WorkoutContainer_templateObject","WorkoutContainer_templateObject2","App","onRequestWorkouts","className","containers_WorkoutContainer","workoutReducer","requestWorkouts","newWorkout","arguments","undefined","action","filter","_payload","push","_payload2","_payload3","result","forEach","createTypeToFormData","selectedIdx","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f907d716.chunk.js","sourcesContent":["const data = [\n  {\n    id: 1,\n    parts: '가슴',\n    name: '벤치프레스',\n    type: [\n      {\n        label: 'Weight',\n        name: 'weight',\n        checked: true\n      },\n      {\n        label: 'Reps',\n        name: 'reps',\n        checked: true\n      },\n      {\n        label: 'Time',\n        name: 'time',\n        checked: false\n      }\n    ],\n    sets: [\n      {\n        weight: 60,\n        reps: 12\n      },\n      {\n        weight: 70,\n        reps: 10\n      },\n      {\n        weight: 80,\n        reps: 8\n      }\n    ],\n    createdAt: '2018-01-01'\n  },\n  {\n    id: 2,\n    parts: '다리',\n    name: '스쿼트',\n    type: [\n      {\n        label: 'Weight',\n        name: 'weight',\n        checked: true\n      },\n      {\n        label: 'Reps',\n        name: 'reps',\n        checked: true\n      },\n      {\n        label: 'Time',\n        name: 'time',\n        checked: false\n      }\n    ],\n    sets: [\n      {\n        weight: 70,\n        reps: 8\n      },\n      {\n        weight: 80,\n        reps: 8\n      }\n    ],\n    createdAt: '2018-01-01'\n  },\n  {\n    id: 3,\n    parts: '팔',\n    name: '덤벨 컬',\n    type: [\n      {\n        label: 'Weight',\n        name: 'weight',\n        checked: true\n      },\n      {\n        label: 'Reps',\n        name: 'reps',\n        checked: true\n      },\n      {\n        label: 'Time',\n        name: 'time',\n        checked: false\n      }\n    ],\n    sets: [\n      {\n        weight: 15,\n        reps: 8\n      }\n    ],\n    createdAt: '2018-01-01'\n  },\n  {\n    id: 4,\n    parts: '전신',\n    name: '데드리프트',\n    type: [\n      {\n        label: 'Weight',\n        name: 'weight',\n        checked: true\n      },\n      {\n        label: 'Reps',\n        name: 'reps',\n        checked: true\n      },\n      {\n        label: 'Time',\n        name: 'time',\n        checked: false\n      }\n    ],\n    sets: [],\n    createdAt: '2018-01-01'\n  }\n];\n\nexport default data;\n","import React, { Component } from 'react';\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\n\nclass Header extends Component {\n  render() {\n    return (\n      <>\n        <AppBar>\n          <Toolbar>\n            <Typography variant=\"title\" color=\"inherit\" style={{ flexGrow: 1 }}>\n              Daily Workout\n            </Typography>\n            <IconButton color=\"inherit\">\n              <AccountCircle />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React, { FunctionComponent } from 'react';\nimport Header from '../components/Header/Header';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 56px;\n  padding: 1em;\n`;\n\nconst Template: FunctionComponent = ({ children }) => {\n  return (\n    <>\n      <Header />\n      <Container>{children}</Container>\n    </>\n  );\n};\n\nexport default Template;\n","import React, { FunctionComponent } from 'react';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  IconButton,\n  Button\n} from '@material-ui/core';\nimport { SetsListType, WorkoutCheckboxListType } from '../../types/workout';\nimport { Add, Close, Edit } from '@material-ui/icons';\n\ninterface ISetsProps {\n  type: WorkoutCheckboxListType;\n  data: SetsListType;\n  handleOpenSetsAddForm: () => void;\n  handleOpenSetsUpdateForm: (selectedIndex: number) => void;\n  handleDeleteSets: (setsIndex: number) => void;\n}\n\nconst Sets: FunctionComponent<ISetsProps> = ({\n  type,\n  data,\n  handleOpenSetsAddForm,\n  handleOpenSetsUpdateForm,\n  handleDeleteSets\n}) => {\n  return (\n    <Paper>\n      <Table style={{ tableLayout: 'fixed' }}>\n        <TableHead>\n          <TableRow>\n            <TableCell style={tableCellStyles} align=\"center\">\n              Set\n            </TableCell>\n            <TableCell style={tableCellStyles} align=\"center\">\n              Data\n            </TableCell>\n            <TableCell style={tableCellStyles} align=\"center\">\n              Actions\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row, index) => {\n            return (\n              <TableRow key={index}>\n                <TableCell\n                  style={tableCellStyles}\n                  component=\"td\"\n                  scope=\"row\"\n                  align=\"center\"\n                >\n                  {index + 1}\n                </TableCell>\n                <TableCell\n                  style={tableCellStyles}\n                  component=\"td\"\n                  scope=\"row\"\n                  align=\"center\"\n                >\n                  {type.map((value, typeIndex) => {\n                    return (\n                      value.checked && (\n                        <div\n                          key={`${index}-${typeIndex}`}\n                          style={{ margin: '1em 0', lineHeight: '1.5em' }}\n                        >\n                          <strong>{value.label.toUpperCase()}</strong> <br />\n                          <span>{row[value.name]}</span>\n                        </div>\n                      )\n                    );\n                  })}\n                </TableCell>\n                <TableCell style={tableCellStyles}>\n                  <IconButton onClick={() => handleOpenSetsUpdateForm(index)}>\n                    <Edit fontSize=\"small\" color=\"primary\" />\n                  </IconButton>\n                  <IconButton\n                    onClick={() =>\n                      confirm(\n                        `${data.length - index}번 세트를 삭제하시겠습니까?`\n                      ) && handleDeleteSets(index)\n                    }\n                  >\n                    <Close fontSize=\"small\" color=\"secondary\" />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n\n          <TableRow>\n            <TableCell style={tableCellStyles} align=\"center\">\n              {data.length + 1}\n            </TableCell>\n            <TableCell style={tableCellStyles} align=\"center\" colSpan={2}>\n              <Button fullWidth={true} onClick={handleOpenSetsAddForm}>\n                <Add fontSize=\"small\" color=\"primary\" />\n              </Button>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n};\n\n// 임시 스타일 추후 @material-ui/styles 추가하여 스타일 작업 필요\nconst tableCellStyles: React.CSSProperties = {\n  padding: 0,\n  textAlign: 'center'\n};\n\nexport default Sets;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport {\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  Typography,\n  Fade\n} from '@material-ui/core';\nimport { MoreVert, Edit, Delete } from '@material-ui/icons';\nimport { WorkoutType } from '../../types/workout';\n\nimport Sets from './Sets';\nimport { deleteWorkout, deleteSets } from '../../actions/workout';\nimport { openSetsAddForm, openSetsUpdateForm } from '../../actions/setsForm';\n\ninterface IWorkoutProps {\n  data: WorkoutType;\n  deleteWorkout: (workout: WorkoutType) => void;\n  openSetsAddForm: (workout: WorkoutType) => void;\n  openSetsUpdateForm: (selectedIndex: number, workout: WorkoutType) => void;\n  deleteSets: (workoutId: any, setsIndex: number) => void;\n  handleOpenUpdateForm: (workout: WorkoutType) => void;\n}\n\nclass Workout extends Component<IWorkoutProps> {\n  state = {\n    anchorEl: null\n  };\n\n  handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({\n      anchorEl: null\n    });\n  };\n\n  handleEdit = () => {\n    this.handleClose();\n    this.props.handleOpenUpdateForm(this.props.data);\n  };\n\n  handleDelete = () => {\n    if (confirm(`${this.props.data.name}을 삭제하시겠습니까?`)) {\n      this.props.deleteWorkout(this.props.data);\n    }\n    this.handleClose();\n  };\n\n  handleOpenSetsAddForm = () => {\n    this.props.openSetsAddForm(this.props.data);\n  };\n\n  handleOpenSetsUpdateForm = (selectedIndex: number) => {\n    this.props.openSetsUpdateForm(selectedIndex, this.props.data);\n  };\n\n  handleDeleteSets = (setsIndex: number) => {\n    this.props.deleteSets(this.props.data.id, setsIndex);\n  };\n\n  render() {\n    const { data } = this.props;\n    const { anchorEl } = this.state;\n    const open = !!anchorEl;\n\n    return (\n      <>\n        <WorkoutHeader>\n          <span>{data.parts || '기타'}</span>\n          <WorkoutName>{data.name}</WorkoutName>\n          <IconButton\n            color=\"inherit\"\n            onClick={this.handleClick}\n            style={{ marginRight: '-12px' }}\n          >\n            <MoreVert />\n          </IconButton>\n          <Menu\n            id=\"fade-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={this.handleClose}\n            TransitionComponent={Fade}\n          >\n            <MenuItem\n              onClick={this.handleEdit}\n              disabled={data.sets && data.sets.length > 0}\n            >\n              <ListItemIcon>\n                <Edit color=\"primary\" />\n              </ListItemIcon>\n              <Typography variant=\"body1\">Edit</Typography>\n            </MenuItem>\n            <MenuItem onClick={this.handleDelete}>\n              <ListItemIcon>\n                <Delete color=\"secondary\" />\n              </ListItemIcon>\n              <Typography variant=\"body1\">Delete</Typography>\n            </MenuItem>\n          </Menu>\n        </WorkoutHeader>\n        <Sets\n          type={data.type}\n          data={data.sets || []}\n          handleOpenSetsAddForm={this.handleOpenSetsAddForm}\n          handleOpenSetsUpdateForm={this.handleOpenSetsUpdateForm}\n          handleDeleteSets={this.handleDeleteSets}\n        />\n      </>\n    );\n  }\n}\nconst WorkoutHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst WorkoutName = styled.strong`\n  padding: 0 1em;\n`;\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    deleteWorkout: (workout: WorkoutType) => dispatch(deleteWorkout(workout)),\n    openSetsAddForm: (workout: WorkoutType) =>\n      dispatch(openSetsAddForm(workout)),\n    openSetsUpdateForm: (selectedIndex: number, workout: WorkoutType) =>\n      dispatch(openSetsUpdateForm(selectedIndex, workout)),\n    deleteSets: (workoutId: any, setsIndex: number) =>\n      dispatch(deleteSets(workoutId, setsIndex))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Workout);\n","import {\n  WorkoutListType,\n  WorkoutType,\n  WorkoutActionTypes,\n  SetsDataType\n} from '../types/workout';\n\nexport const REQUEST_WORKOUTS = 'REQUEST_WORKOUTS';\nexport const ADD_WORKOUT = 'ADD_WORKOUT';\nexport const DELETE_WORKOUT = 'DELETE_WORKOUT';\nexport const UPDATE_WORKOUT = 'UPDATE_WORKOUT';\n\nexport const requestWorkouts = (list: WorkoutListType): WorkoutActionTypes => {\n  return {\n    type: REQUEST_WORKOUTS,\n    payload: list\n  };\n};\n\nexport const addWorkout = (workout: WorkoutType): WorkoutActionTypes => {\n  return {\n    type: ADD_WORKOUT,\n    payload: workout\n  };\n};\n\nexport const deleteWorkout = (workout: WorkoutType): WorkoutActionTypes => {\n  return {\n    type: DELETE_WORKOUT,\n    payload: workout\n  };\n};\n\nexport const updateWorkout = (workout: WorkoutType): WorkoutActionTypes => {\n  return {\n    type: UPDATE_WORKOUT,\n    payload: workout\n  };\n};\n\nexport const ADD_SETS = 'ADD_SETS';\nexport const DELETE_SETS = 'DELETE_SETS';\nexport const UPDATE_SETS = 'UPDATE_SETS';\n\nexport const addSets = (\n  workoutId: string,\n  setsData: SetsDataType\n): WorkoutActionTypes => {\n  return {\n    type: ADD_SETS,\n    payload: {\n      workoutId,\n      setsData\n    }\n  };\n};\n\nexport const deleteSets = (\n  workoutId: any,\n  setsIndex: number\n): WorkoutActionTypes => {\n  return {\n    type: DELETE_SETS,\n    payload: {\n      workoutId,\n      setsIndex\n    }\n  };\n};\n\nexport const updateSets = (\n  workoutId: any,\n  setsIndex: number,\n  setsData: SetsDataType\n): WorkoutActionTypes => {\n  return {\n    type: UPDATE_SETS,\n    payload: {\n      workoutId,\n      setsIndex,\n      setsData\n    }\n  };\n};\n","import { WorkoutType } from '../types/workout';\nimport { SetsFormActionTypes } from '../types/setsForm';\nexport const OPEN_SETS_ADD_FORM = 'OPEN_SETS_ADD_FORM';\nexport const OPEN_SETS_UPDATE_FORM = 'OPEN_SETS_UPDATE_FORM';\nexport const CLOSE_SETS_FORM = 'CLOSE_SETS_FORM';\nexport const CHANGE_SETS_VALUE = 'CHANGE_SETS_VALUE';\n\nexport const openSetsAddForm = (\n  workoutData: WorkoutType\n): SetsFormActionTypes => {\n  return {\n    type: OPEN_SETS_ADD_FORM,\n    payload: workoutData\n  };\n};\n\nexport const openSetsUpdateForm = (\n  index: number,\n  workoutData: WorkoutType\n): SetsFormActionTypes => {\n  return {\n    type: OPEN_SETS_UPDATE_FORM,\n    payload: {\n      index,\n      workoutData\n    }\n  };\n};\n\nexport const closeSetsForm = (): SetsFormActionTypes => {\n  return {\n    type: CLOSE_SETS_FORM\n  };\n};\n\nexport const changeSetsValue = (\n  name: string,\n  value: string\n): SetsFormActionTypes => {\n  return {\n    type: CHANGE_SETS_VALUE,\n    payload: {\n      name,\n      value\n    }\n  };\n};\n","import React, { FunctionComponent } from 'react';\nimport { WorkoutListType, WorkoutType } from '../../types/workout';\nimport { Typography } from '@material-ui/core';\nimport Workout from './Workout';\nimport styled from 'styled-components';\n\ninterface IWorkoutListProps {\n  list: WorkoutListType;\n  handleOpenUpdateForm: (workout: WorkoutType) => void;\n}\n\nconst WorkoutList: FunctionComponent<IWorkoutListProps> = ({\n  list,\n  handleOpenUpdateForm\n}) => {\n  if (!list.length) {\n    return <Typography>등록된 운동이 없습니다.</Typography>;\n  }\n  return (\n    <List>\n      {list.map((workout, index) => {\n        return (\n          <ListItem key={index}>\n            <Workout\n              data={workout}\n              handleOpenUpdateForm={handleOpenUpdateForm}\n            />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nconst List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst ListItem = styled.li`\n  margin: 2em 0;\n\n  &:first-child {\n    margin-top: 0;\n  }\n`;\n\nexport default WorkoutList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormGroup,\n  TextField,\n  Button,\n  FormControlLabel,\n  Switch\n} from '@material-ui/core';\nimport { WorkoutType } from '../../types/workout';\nimport { addWorkout, updateWorkout } from '../../actions/workout';\n\ninterface IWorkoutFormProps {\n  open: boolean;\n  formData: WorkoutType | null;\n  onClose: () => void;\n  addWorkout: (workout: WorkoutType) => void;\n  updateWorkout: (workout: WorkoutType) => void;\n}\n\nconst initialState = {\n  submitType: 'add',\n  formData: {\n    parts: '',\n    name: '',\n    type: [\n      {\n        label: 'Weight',\n        name: 'weight',\n        checked: true\n      },\n      {\n        label: 'Reps',\n        name: 'reps',\n        checked: true\n      },\n      {\n        label: 'Time',\n        name: 'time',\n        checked: false\n      }\n    ]\n  }\n};\n\nclass WorkoutForm extends Component<IWorkoutFormProps> {\n  state = initialState;\n\n  static getDerivedStateFromProps(props: any, state: any) {\n    if (state.submitType !== 'update' && props.formData) {\n      return {\n        submitType: 'update',\n        formData: props.formData\n      };\n    }\n    // when null is returned no update is made to the state\n    return null;\n  }\n\n  handleChangeText = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      formData: {\n        ...this.state.formData,\n        [event.target.name]: event.target.value\n      }\n    });\n  };\n\n  handleCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      formData: { type }\n    } = this.state;\n    const newType = type.map(value => {\n      if (value.name === event.target.name) {\n        return {\n          ...value,\n          checked: event.target.checked\n        };\n      }\n      return value;\n    });\n    this.setState({\n      formData: {\n        ...this.state.formData,\n        type: [...newType]\n      }\n    });\n  };\n\n  handleClose = () => {\n    this.props.onClose();\n    this.setState(initialState);\n  };\n\n  handleSubmit = () => {\n    const { submitType, formData } = this.state;\n    const workout: WorkoutType = {\n      ...formData\n    };\n\n    if (!this.isValid()) {\n      return false;\n    }\n\n    if (submitType === 'add') {\n      workout['id'] = Math.random();\n      workout['createdAt'] = new Date().getTime();\n      this.props.addWorkout(workout);\n    } else if (submitType === 'update') {\n      this.props.updateWorkout(workout);\n    }\n    this.handleClose();\n  };\n\n  isValid = () => {\n    const {\n      formData: { name, type }\n    } = this.state;\n    const checkName = name !== '';\n    const checkType = type.some(value => value.checked === true);\n    if (!checkName || !checkType) {\n      return false;\n    }\n    return true;\n  };\n\n  render() {\n    const { open } = this.props;\n    const {\n      submitType,\n      formData: { parts, name, type }\n    } = this.state;\n    return (\n      <Dialog open={open} keepMounted onClose={this.handleClose}>\n        <DialogTitle>운동 {submitType === 'add' ? '추가' : '수정'}</DialogTitle>\n        <DialogContent>\n          <TextField\n            label=\"운동부위\"\n            fullWidth={true}\n            name=\"parts\"\n            value={parts}\n            onChange={this.handleChangeText}\n          />\n          <TextField\n            label=\"운동명\"\n            fullWidth={true}\n            name=\"name\"\n            value={name}\n            onChange={this.handleChangeText}\n          />\n          <FormGroup row={false}>\n            {type.map((value, index) => {\n              return (\n                <FormControlLabel\n                  key={index}\n                  control={\n                    <Switch\n                      name={value.name}\n                      checked={value.checked}\n                      onChange={this.handleCheckbox}\n                      color=\"primary\"\n                    />\n                  }\n                  label={value.label}\n                  value=\"end\"\n                  labelPlacement=\"start\"\n                  style={{\n                    marginLeft: '0px',\n                    justifyContent: 'space-between'\n                  }}\n                />\n              );\n            })}\n          </FormGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"secondary\" fullWidth={true} onClick={this.handleClose}>\n            취소\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth={true}\n            onClick={this.handleSubmit}\n            disabled={!this.isValid()}\n          >\n            {submitType === 'add' ? '추가' : '수정'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addWorkout: (workout: WorkoutType) => dispatch(addWorkout(workout)),\n    updateWorkout: (workout: WorkoutType) => dispatch(updateWorkout(workout))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(WorkoutForm);\n","import React, { Component, FunctionComponent } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  FormGroup,\n  FormControlLabel,\n  DialogActions,\n  Switch,\n  Button\n} from '@material-ui/core';\nimport { IRootState } from '../../types/root';\nimport { WorkoutType, SetsDataType } from '../../types/workout';\nimport { closeSetsForm, changeSetsValue } from '../../actions/setsForm';\nimport { addSets, updateSets } from '../../actions/workout';\n\ninterface ISetsFromProps {\n  selectedSetsIndex: number;\n  workoutData: WorkoutType;\n  formData: SetsDataType;\n  isOpen: boolean;\n  closeSetsForm: () => void;\n  changeSetsValue: (name: string, value: string) => void;\n  addSets: (workoutId: any, setsData: SetsDataType) => void;\n  updateSets: (\n    workoutId: any,\n    setsIndex: number,\n    setsData: SetsDataType\n  ) => void;\n}\n\ninterface ISetsFromTitleProps {\n  index: number;\n  name: string;\n  count: number;\n}\nconst SetsFormTitle: FunctionComponent<ISetsFromTitleProps> = ({\n  index,\n  name,\n  count\n}) => {\n  if (index !== -1) {\n    return (\n      <DialogTitle>\n        {name} - {index + 1} 세트\n      </DialogTitle>\n    );\n  }\n\n  return (\n    <DialogTitle>\n      {name} - {count} Sets\n    </DialogTitle>\n  );\n};\n\nclass SetsForm extends Component<ISetsFromProps> {\n  handleClose = () => {\n    this.props.closeSetsForm();\n  };\n  handleChangeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    this.props.changeSetsValue(name, value);\n  };\n  handleSubmit = () => {\n    const {\n      selectedSetsIndex,\n      workoutData: { id },\n      formData\n    } = this.props;\n\n    if (selectedSetsIndex !== -1) {\n      // 수정\n      this.props.updateSets(id, selectedSetsIndex, formData);\n      this.handleClose();\n    } else {\n      // 추가\n      this.props.addSets(id, formData);\n      this.handleClose();\n    }\n  };\n  render() {\n    const { selectedSetsIndex, workoutData, isOpen } = this.props;\n    const { name, sets, type } = workoutData;\n    return (\n      <Dialog open={isOpen} onClose={this.handleClose}>\n        <SetsFormTitle\n          index={selectedSetsIndex}\n          name={name}\n          count={sets && sets.length ? sets.length + 1 : 1}\n        />\n\n        <DialogContent>\n          {type &&\n            type.map((value, index) => {\n              if (!value.checked) {\n                return null;\n              }\n              return (\n                <TextField\n                  key={index}\n                  type=\"number\"\n                  label={value.label}\n                  fullWidth={true}\n                  name={value.name}\n                  onChange={this.handleChangeValue}\n                />\n              );\n            })}\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"secondary\" fullWidth={true} onClick={this.handleClose}>\n            취소\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth={true}\n            onClick={this.handleSubmit}\n          >\n            {selectedSetsIndex !== -1 ? '수정' : '추가'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => {\n  const {\n    isOpen,\n    workoutData,\n    formData,\n    selectedSetsIndex\n  } = state.setsFormReducer;\n  return {\n    isOpen,\n    workoutData,\n    formData,\n    selectedSetsIndex\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    closeSetsForm: () => dispatch(closeSetsForm()),\n    changeSetsValue: (name: string, value: string) =>\n      dispatch(changeSetsValue(name, value)),\n    addSets: (workoutId: any, setsData: SetsDataType) =>\n      dispatch(addSets(workoutId, setsData)),\n    updateSets: (workoutId: any, setsIndex: number, setsData: SetsDataType) =>\n      dispatch(updateSets(workoutId, setsIndex, setsData))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SetsForm);\n","import React, { Component } from 'react';\nimport { WorkoutListType, WorkoutType } from '../types/workout';\n\nimport styled from 'styled-components';\nimport { Fab } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nimport Template from '../layouts/Template';\nimport WorkoutList from '../components/Workout/WorkoutList';\nimport WorkoutForm from '../components/Workout/WorkoutForm';\nimport SetsForm from '../components/Workout/SetsForm';\n\ninterface IWorkoutContainerProps {\n  workoutList: WorkoutListType;\n}\n\nclass WorkoutContainer extends Component<IWorkoutContainerProps> {\n  state = {\n    isOpen: false,\n    formData: null\n  };\n  handleOpenAddForm = () => {\n    this.setState({ isOpen: true });\n  };\n  handleOpenUpdateForm = (workout: WorkoutType) => {\n    this.setState({\n      isOpen: true,\n      formData: workout\n    });\n  };\n  handleCloseWorkoutForm = () => {\n    this.setState({ isOpen: false, formData: null });\n  };\n  render() {\n    const { workoutList } = this.props;\n    return (\n      <Template>\n        <WorkoutContainerWrapper>\n          <WorkoutList\n            list={workoutList}\n            handleOpenUpdateForm={this.handleOpenUpdateForm}\n          />\n          <AddButton>\n            <Fab\n              size=\"small\"\n              color=\"primary\"\n              aria-label=\"Add\"\n              onClick={this.handleOpenAddForm}\n            >\n              <Add />\n            </Fab>\n          </AddButton>\n          <WorkoutForm\n            open={this.state.isOpen}\n            onClose={this.handleCloseWorkoutForm}\n            formData={this.state.formData}\n          />\n          <SetsForm />\n        </WorkoutContainerWrapper>\n      </Template>\n    );\n  }\n}\n\nconst WorkoutContainerWrapper = styled.div`\n  margin-bottom: 4em;\n`;\n\nconst AddButton = styled.div`\n  position: fixed;\n  bottom: 1em;\n  left: 0;\n  width: 100%;\n  text-align: center;\n`;\n\nexport default WorkoutContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { IRootState } from './types/root';\nimport { WorkoutListType } from './types/workout';\nimport { requestWorkouts } from './actions/workout';\nimport data from './mock/data';\n\nimport WorkoutContainer from './containers/WorkoutContainer';\n\ninterface IAppProps {\n  workoutList: WorkoutListType;\n  onRequestWorkouts: (list: WorkoutListType) => any;\n}\n\nclass App extends Component<IAppProps> {\n  componentDidMount() {\n    this.props.onRequestWorkouts(data);\n  }\n  render() {\n    const { workoutList } = this.props;\n    return (\n      <div className=\"App\">\n        <WorkoutContainer workoutList={workoutList} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    workoutList: state.workoutReducer.workoutList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    onRequestWorkouts: (list: WorkoutListType) =>\n      dispatch(requestWorkouts(list))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\n  REQUEST_WORKOUTS,\n  ADD_WORKOUT,\n  DELETE_WORKOUT,\n  UPDATE_WORKOUT,\n  ADD_SETS,\n  UPDATE_SETS,\n  DELETE_SETS\n} from '../actions/workout';\n\nimport {\n  WorkoutActionTypes,\n  IWorkoutState,\n  WorkoutListType,\n  WorkoutType,\n  AddSetsActionType,\n  UpdateSetsActionType\n} from '../types/workout';\n\nconst initialState: IWorkoutState = {\n  workoutList: []\n};\n\nconst workoutReducer = (\n  state = initialState,\n  action: WorkoutActionTypes\n): IWorkoutState => {\n  let newWorkout: WorkoutType;\n\n  switch (action.type) {\n    case REQUEST_WORKOUTS:\n      return {\n        ...state,\n        workoutList: [...(action.payload as WorkoutListType)]\n      };\n    case ADD_WORKOUT:\n      return {\n        ...state,\n        workoutList: [...state.workoutList, action.payload as WorkoutType]\n      };\n    case UPDATE_WORKOUT:\n      newWorkout = action.payload as WorkoutType;\n      return {\n        ...state,\n        workoutList: [\n          ...state.workoutList.map(workout => {\n            if (workout.id === newWorkout.id) {\n              return newWorkout;\n            }\n            return workout;\n          })\n        ]\n      };\n    case DELETE_WORKOUT:\n      return {\n        ...state,\n        workoutList: [\n          ...state.workoutList.filter(\n            workout => workout.id !== (action.payload as WorkoutType).id\n          )\n        ]\n      };\n\n    case ADD_SETS:\n      return {\n        ...state,\n        workoutList: [\n          ...state.workoutList.map(workout => {\n            const {\n              workoutId,\n              setsData\n            } = (action as AddSetsActionType).payload;\n            const updateWorkout = { ...workout };\n            if (workout.id === workoutId) {\n              if (!updateWorkout.sets) {\n                updateWorkout['sets'] = [];\n              }\n              updateWorkout.sets.push(setsData);\n              return updateWorkout;\n            }\n            return workout;\n          })\n        ]\n      };\n\n    case UPDATE_SETS:\n      return {\n        ...state,\n        workoutList: [\n          ...state.workoutList.map(workout => {\n            const {\n              workoutId,\n              setsIndex,\n              setsData\n            } = (action as UpdateSetsActionType).payload;\n            const updateWorkout = { ...workout };\n            if (workout.id === workoutId) {\n              if (updateWorkout.sets) {\n                updateWorkout.sets[setsIndex] = setsData;\n              }\n              return updateWorkout;\n            }\n            return workout;\n          })\n        ]\n      };\n\n    case DELETE_SETS:\n      return {\n        ...state,\n        workoutList: [\n          ...state.workoutList.map(workout => {\n            const {\n              workoutId,\n              setsIndex\n            } = (action as UpdateSetsActionType).payload;\n            const updateWorkout = { ...workout };\n            if (workout.id === workoutId) {\n              if (updateWorkout.sets) {\n                updateWorkout.sets = updateWorkout.sets.filter(\n                  (value, index) => index !== setsIndex\n                );\n              }\n              return updateWorkout;\n            }\n            return workout;\n          })\n        ]\n      };\n    default:\n      return state;\n  }\n};\n\nexport default workoutReducer;\n","import { ISetsFormState, SetsFormActionTypes } from '../types/setsForm';\nimport {\n  OPEN_SETS_ADD_FORM,\n  OPEN_SETS_UPDATE_FORM,\n  CLOSE_SETS_FORM,\n  CHANGE_SETS_VALUE\n} from '../actions/setsForm';\nimport { WorkoutType, SetsDataType, SetsListType } from '../types/workout';\n\nconst initialState: ISetsFormState = {\n  selectedSetsIndex: -1,\n  workoutData: {} as WorkoutType,\n  formData: {},\n  isOpen: false\n};\n\nconst createTypeToFormData = (type: SetsListType): SetsDataType => {\n  const result: SetsDataType = {};\n  type.forEach(value => {\n    if (value.checked) {\n      result[value.name] = '';\n    }\n  });\n  return result;\n};\n\nconst setsFormReducer = (\n  state = initialState,\n  action: SetsFormActionTypes\n): ISetsFormState => {\n  let workoutData: WorkoutType;\n  let formData: SetsDataType;\n  switch (action.type) {\n    case OPEN_SETS_ADD_FORM:\n      workoutData = action.payload;\n      formData = createTypeToFormData(workoutData.type);\n\n      return {\n        selectedSetsIndex: -1,\n        workoutData,\n        formData,\n        isOpen: true\n      };\n    case OPEN_SETS_UPDATE_FORM:\n      const selectedIdx = action.payload.index;\n      workoutData = { ...action.payload.workoutData };\n      formData = workoutData.sets ? { ...workoutData.sets[selectedIdx] } : {};\n\n      return {\n        selectedSetsIndex: action.payload.index,\n        workoutData,\n        formData,\n        isOpen: true\n      };\n    case CLOSE_SETS_FORM:\n      return {\n        ...state,\n        formData: {},\n        isOpen: false\n      };\n    case CHANGE_SETS_VALUE:\n      formData = state.formData;\n      formData[action.payload.name] = action.payload.value;\n      return {\n        ...state,\n        formData\n      };\n    default:\n      return state;\n  }\n};\n\nexport default setsFormReducer;\n","import { combineReducers } from 'redux';\nimport workoutReducer from './workoutReducer';\nimport setsFormReducer from './setsFormReducer';\n\nconst rootReducer = combineReducers({\n  workoutReducer,\n  setsFormReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware()));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'normalize.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}